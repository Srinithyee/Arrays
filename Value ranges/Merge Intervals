'''Asked in:  
Google
'''

# Definition for an interval.
class Interval:
     def __init__(self, s=0, e=0):
         self.start = s
         self.end = e

class Solution:
    # @param intervals, a list of Intervals
    # @param new_interval, a Interval
    # @return a list of Interval
    def insert(self, intervals, new_interval):
        i = 0
        if new_interval.start > new_interval.end:
            new_interval = Interval(new_interval.end, new_interval.start)
        new_s = new_interval.start
        new_e = new_interval.end
        while i < len(intervals) and new_interval.start > intervals[i].end:
            i+= 1
        if i < len(intervals):
            new_s = min(new_interval.start, intervals[i].start)
        j = i
        while j < len(intervals) and new_interval.end > intervals[j].end:
            j+= 1
        if j < len(intervals) and new_interval.end < intervals[j].start:
            j -=1
        if j < len(intervals) and new_interval.end > intervals[j].start:
            new_e = max(new_interval.end, intervals[j].end)
        interv = Interval(new_s,new_e)
        for k in range(i, j+1):
            if i < len(intervals):
                del intervals[i]
        intervals.insert(i, interv)
        
        return intervals 
        
